#!/usr/bin/env bash

install_path=$(
  cd $(dirname $0)
  pwd
)

config_path=$( cd $install_path/..
  pwd
)

echo "====> Config file root path is: ${config_path}"

if [[ `uname` == 'Darwin'  ]]; then
  # 安装包管理器
  if ! command -v brew >/dev/null 2>&1; then
      echo "====> Homebrew is not be installed, start to install"
      /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
  else
      echo "----> Homebrew is already install"
  fi

  # 安装软件
  if ! command -v zsh >/dev/null 2>&1; then
      echo "====> Zsh is not be installed, start to install"
      brew install zsh
  else
      echo "----> Zsh is already install"
  fi

  if ! command -v fzf >/dev/null 2>&1; then
      echo "====> Fzf is not be installed, start to install"
      brew install fzf
      $(brew --prefix)/opt/fzf/install
  else
      echo "----> Fzf is already install"
  fi

  if ! command -v rg >/dev/null 2>&1; then
      echo "====> Ripgrep is not be installed, start to install"
      brew install Ripgrep
  else
      echo "----> Ripgrep is already install"
  fi
  
  if ! command -v fd >/dev/null 2>&1; then
      echo "====> Fd is not be installed, start to install"
      brew install fd
  else
      echo "----> fd is already install"
  fi

  if ! command -v bat >/dev/null 2>&1; then
      echo "====> Bat is not be installed, start to install"
      brew install bat
  else
      echo "----> Bat is already install"
  fi
else
  echo "xxxx> Currenty operating system is not supported"
  exit 1
fi

# 安装zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
if [ ! -e "$ZINIT_HOME" ]; then
  echo "====> Zinit is not be installed, start to install"
  mkdir -p "$(dirname $ZINIT_HOME)"
  git clone https://github.com/zdharma-continuum/zinit.git "$ZINIT_HOME"
  if [ $? -ne 0 ]; then
    echo "xxxx> Install zinit failed, install stop"
    exit 1
  fi
else
  echo "----> Zinit is already install"
fi

# echo "====> Use Gem to install necessary"
# gem install rough

# 创建备份文件地址
if [ ! -d $config_path/bak ]; then
  mkdir -p $config_path/bak
fi
echo "====> Back up dir path is: ${config_path}/bak"

# 备份已有的zshrc文件
if [ -f ~/.zshrc ]; then
  echo "====> Zsh config file zshrc is exist, backup and delete it."
  mv ~/.zshrc $config_path/bak/zshrc.bak
  rm ~/.zshrc >/dev/null 2>&1
fi

echo "====> Create zshrc link"
ln -s $config_path/zsh/zshrc ~/.zshrc

# 备份已有的p10k.zsh文件
if [ -f ~/.p10k.zsh ]; then
  echo "====> p10k config file .p10k.zsh is exist, backup and delete it."
  mv ~/.p10k.zsh $config_path/bak/p10k.zsh.bak
  rm ~/.p10k.zsh >/dev/null 2>&1
fi

echo "====> Create p10k link"
ln -s $config_path/zsh/p10k.zsh ~/.p10k.zsh

# 备份已有的 fzf 文件
if [ -f ~/.fzf.zsh ]; then
  echo "====> fzf config file is .fzf.zsh exist, backup and delete it."
  mv ~/.fzf.zsh $config_path/bak/fzf.zsh.bak
  rm ~/.fzf.zsh >/dev/null 2>&1
fi

echo "====> Create fzf link"
ln -s $config_path/zsh/fzf.zsh ~/.fzf.zsh

# 切换到zsh
echo "====> Change to zsh"
chsh -s /bin/zsh
zsh

source ~/.zshrc
