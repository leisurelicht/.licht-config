# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# To customize prompt, run `p10k configure` or edit ~/.p10k.zsh.
[[ ! -f ~/.p10k.zsh ]] || source ~/.p10k.zsh

# zinit install
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
source "${ZINIT_HOME}/zinit.zsh"

# zinit plugins
#
# Load powerlevel10k theme
zinit ice depth=1; zinit light romkatv/powerlevel10k

# 快速目录跳转
zinit ice lucid wait='1'; zinit light skywind3000/z.lua
export _ZL_MATCH_MODE=1

# 语法高亮
zinit ice lucid wait='0' atinit='ZINIT[COMPINIT_OPTS]=-C; zicompinit; zicdreplay'
zinit light zdharma-continuum/fast-syntax-highlighting

# 自动建议
zinit ice lucid wait='0' atload='_zsh_autosuggest_start'
zinit light zsh-users/zsh-autosuggestions

# 补全
zinit ice lucid wait='0'
zinit light zsh-users/zsh-completions

# git open
zinit ice lucide wait='1'
zinit light paulirish/git-open

# OMZ 插件
zinit snippet OMZ::lib/history.zsh
zinit snippet OMZ::plugins/extract
zinit snippet OMZ::plugins/sudo/sudo.plugin.zsh
zinit snippet OMZ::plugins/vscode/vscode.plugin.zsh

# homebrew
# 禁止自动全局更新和全局清理
export HOMEBREW_NO_AUTO_UPDATE=1
export HOMEBREW_NO_INSTALL_CLEANUP=1

# autojump
[ -f /opt/homebrew/etc/profile.d/autojump.sh ] && . /opt/homebrew/etc/profile.d/autojump.sh

# fzf
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh

export PATH="$HOME/.local/bin/:$PATH"

# ===== set g environment variables =====
unalias g 2> /dev/null
export GOROOT="${HOME}/.g/go"
export GOPATH="${HOME}/.g/path"
export PATH="${HOME}/.g/bin:${HOME}/.g/go/bin:${HOME}/.g/path/bin:$PATH"
export G_MIRROR=https://golang.google.cn/dl/

export GO111MODULE=on
export GOPROXY=https://goproxy.io,direct

export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
if type pyenv >/dev/null 2>&1; then
    # pyenv
    alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'

    eval "$(pyenv init -)"
    # pyenv virtualenv
    eval "$(pyenv virtualenv-init -)"
    export PYENV_VIRTUALENV_DISABLE_PROMPT=1
fi

# export env
[ -f ~/.config_file/zsh/export_env ] && source ~/.config_file/zsh/export_env

# alias
[ -f ~/.config_file/zsh/aliasrc ] && source ~/.config_file/zsh/aliasrc
